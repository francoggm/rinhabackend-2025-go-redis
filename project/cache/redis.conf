# redis.conf for High-Concurrency Docker Deployment

# === Networking and Connections ===
# Sets the TCP listen() backlog queue size to handle connection bursts.
# This requires the container's 'net.core.somaxconn' sysctl setting to be at least this high.
tcp-backlog 8192

# Sets the maximum number of concurrent client connections.
# This requires a corresponding 'ulimit -n' setting in the container.
maxclients 20000

# Closes connections that are idle for 300 seconds (5 minutes) to prevent resource leaks.
timeout 300

# Uses the OS TCP keepalive mechanism to detect and close dead connections every 300 seconds.
tcp-keepalive 300

# === I/O Threading for Performance ===
# Enables I/O threads to offload network tasks from the main thread, boosting throughput.
# A value of 4 is a good starting point for a multi-core system.
io-threads 4
io-threads-do-reads yes

# === Persistence ===
# Enables Append Only File (AOF) persistence for better durability.
appendonly yes
appendfsync everysec

# === Logging ===
# Sets the log level to 'notice' for production environments to avoid overly verbose logs.
loglevel notice
